// controllers/DiplomaController.js
import diplomaModel from '../models/Diploma.js';

const DiplomasController = {
  async creerDiplomes (req, res)  {
    try {
      const { anneeId, titreDiplome, typeDiplome, etudiants } = req.body;
      console.log("partie Controller: ");
      console.log("üì© Requ√™te re√ßue avec :", req.body);
      console.log("Type de etudiants:", typeof etudiants);
      console.log("Contenu de etudiants:", etudiants);
      console.log("Premier √©l√©ment:", etudiants[0]);
      if (!anneeId || !titreDiplome || !typeDiplome || !etudiants) {
        return res.status(400).json({ success: false, message: "Champs requis manquants" });
      }

      const result = await diplomaModel.creerDiplomesPourEtudiants(anneeId, titreDiplome, typeDiplome, etudiants);

      if (result.length === 0) {
        return res.status(400).json({ success: false, message: "Aucun dipl√¥me n'a pu √™tre cr√©√©. V√©rifiez les donn√©es des √©tudiants." });
      }
      
      res.status(200).json({ success: true, diplomeIds: result.map(d => d.id) });
    } catch (error) {
      console.error("Erreur cr√©ation dipl√¥mes:", error);
      res.status(500).json({ success: false, message: "Erreur serveur" });
    }
  }, 
 // R√©cup√©rer les dipl√¥mes NON valid√©s pour une universit√©
async  getDiplomasToValidate(req, res) {
  try {
    const { universityId } = req.params;
    const diplomas = await diplomaModel.getDiplomasToValidateService(universityId);
 res.json(diplomas);
  } catch (error) {
    console.error('Erreur:', error);
    res.status(500).json({ message: 'Erreur lors de la r√©cup√©ration des dipl√¥mes.' });
  }
}
,
// Valider un dipl√¥me sp√©cifique
async  validateDiploma(req, res) {
  try {
    const { diplomaId } = req.params;
    const diploma = await diplomaModel.validateDiplomaService(diplomaId);
    res.json({
      message: `Dipl√¥me ${diploma.nom} valid√© avec succ√®s !`,
      diploma
    });
  } catch (error) {
    console.error('Erreur de validation:', error);
    res.status(500).json({ message: 'Erreur lors de la validation du dipl√¥me.' });
  }
}
,
// Valider TOUS les dipl√¥mes d'une universit√©
async validateAllDiplomas(req, res) {
  try {
    const { universityId } = req.params;
    const result = await diplomaModel.validateAllDiplomasService(universityId);
    res.json({ message: `${result.count} dipl√¥mes valid√©s avec succ√®s !` });
  } catch (error) {
    console.error('Erreur bulk validation:', error);
    res.status(500).json({ message: 'Erreur lors de la validation de tous les dipl√¥mes.' });
  }
}
,
// R√©cup√©rer les dipl√¥mes VALID√âS d'une universit√©
async  getValidatedDiplomas(req, res) {
  try {
    const { universityId } = req.params;
    const diplomas = await diplomaModel.getValidatedDiplomasService(universityId);
    res.json(diplomas);
  } catch (error) {
    console.error('Erreur dipl√¥mes valid√©s:', error);
    res.status(500).json({ message: 'Erreur lors de la r√©cup√©ration des dipl√¥mes valid√©s.' });
  }
}, 

async rejectDiploma  (req, res) {
  const { diplomaId } = req.params;

  try {
    const diploma = await diplomaModel.deleteDiplomaById(diplomaId);

    if (!diploma) {
      return res.status(404).json({ error: 'Dipl√¥me non trouv√©' });
    }

    res.status(200).json({ message: 'Dipl√¥me rejet√© avec succ√®s' });
  } catch (error) {
    console.error('Erreur lors du rejet du dipl√¥me :', error);
    res.status(500).json({ error: 'Erreur serveur' });
  }
}

};

export default DiplomasController;
