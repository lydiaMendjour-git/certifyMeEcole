import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient({
  log: ['query', 'info', 'warn', 'error']
})

const clearDatabaseTables = async () => {
  try {
    console.log('üöÄ D√©but du processus de vidage des tables...')

    // D√©sactiver les contraintes de cl√© √©trang√®re temporairement
    await prisma.$executeRaw`SET session_replication_role = 'replica';`

    // Ordre de suppression important √† cause des relations
    const tablesToClear = [
      'DiplomeEcole',
      'CursusEcole',
      'EtudiantEcole',
      'Formation',
      'EcoleAnnee'
    ]

    for (const table of tablesToClear) {
      console.log(`üßπ Nettoyage de la table ${table}...`)
      await prisma.$executeRawUnsafe(`TRUNCATE TABLE "${table}" CASCADE;`)
      console.log(`‚úÖ Table ${table} vid√©e avec succ√®s`)
    }

    // R√©activer les contraintes
    await prisma.$executeRaw`SET session_replication_role = 'origin';`

    console.log('üéâ Toutes les tables ont √©t√© vid√©es avec succ√®s!')
  } catch (error) {
    console.error('‚ùå Erreur lors du vidage des tables:', error)
    if (error instanceof Error) {
      console.error(error.stack)
    }
  } finally {
    await prisma.$disconnect()
  }
}

// Ex√©cuter le script
clearDatabaseTables()