import { PrismaClient } from '@prisma/client'

export default async function deparmentsSeeder(prisma: PrismaClient) {
  console.log("üå± Seeding Departments...")

  try {
    // R√©cup√©rer toutes les facult√©s et les universit√©s
    const faculties = await prisma.faculty.findMany()
    const universities = await prisma.university.findMany()

    if (faculties.length === 0 || universities.length === 0) {
      console.error("‚ùå Aucune facult√© ou universit√© trouv√©e, impossible de seeder les d√©partements.")
      return
    }

    // Ins√©rer des d√©partements pour chaque facult√© et universit√©
    for (const faculty of faculties) {
      const university = universities.find(u => u.idUni === faculty.idUni)
      if (!university) {
        console.error(`‚ùå Universit√© avec id ${faculty.idUni} introuvable pour la facult√© ${faculty.nomFaculty}.`)
        continue
      }

      await prisma.department.createMany({
        data: [
          { nomDepart: "Informatique", idFaculty: faculty.idFaculty, idUni: faculty.idUni },
          { nomDepart: "Math√©matiques", idFaculty: faculty.idFaculty, idUni: faculty.idUni },
          { nomDepart: "Chirurgie", idFaculty: faculty.idFaculty, idUni: faculty.idUni },
          { nomDepart: "Litt√©rature Fran√ßaise", idFaculty: faculty.idFaculty, idUni: faculty.idUni }
        ],
        skipDuplicates: true
      })
    }

    console.log('‚úî Departments seeded')
  } catch (error) {
    console.error("‚ùå Erreur lors du seeding des d√©partements:", error)
  } finally {
    await prisma.$disconnect()
  }
}